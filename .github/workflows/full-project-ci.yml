name: Full Project CI

on:
  # Se ejecuta cuando se hace un Pull Request hacia main
  pull_request:
    branches: [ main ]
  # Se ejecuta cuando se hace merge/push a main (despuÃ©s del PR aprobado)
  push:
    branches: [ main ]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      backend-changed: ${{ steps.changes.outputs.backend }}
      frontend-changed: ${{ steps.changes.outputs.frontend }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Detect changes
      uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          backend:
            - 'backend/**'
          frontend:
            - 'frontend/**'

  backend-tests:
    needs: detect-changes
    if: needs.detect-changes.outputs.backend-changed == 'true'
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: backend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Generate Prisma client
      run: npx prisma generate

    - name: Run tests
      run: npm run test

  frontend-build:
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend-changed == 'true'
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: frontend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Setup Expo CLI
      run: npm install -g @expo/cli

    - name: Run linting
      run: npm run lint

    - name: Check TypeScript compilation
      run: npx tsc --noEmit

  summary:
    needs: [detect-changes, backend-tests, frontend-build]
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: Summary
      run: |
        echo "## CI Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "- Backend changed: ${{ needs.detect-changes.outputs.backend-changed }}" >> $GITHUB_STEP_SUMMARY
        echo "- Frontend changed: ${{ needs.detect-changes.outputs.frontend-changed }}" >> $GITHUB_STEP_SUMMARY
        echo "- Backend tests: ${{ needs.backend-tests.result || 'skipped' }}" >> $GITHUB_STEP_SUMMARY
        echo "- Frontend build: ${{ needs.frontend-build.result || 'skipped' }}" >> $GITHUB_STEP_SUMMARY
